$date
	Tue Jun 17 12:52:29 2025
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module top_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var wire 1 # led_out [3] $end
$var wire 1 $ led_out [2] $end
$var wire 1 % led_out [1] $end
$var wire 1 & led_out [0] $end

$scope module uut $end
$var wire 1 ' clk $end
$var wire 1 ( reset $end
$var wire 1 # led_out [3] $end
$var wire 1 $ led_out [2] $end
$var wire 1 % led_out [1] $end
$var wire 1 & led_out [0] $end
$var wire 1 ) result_debug [7] $end
$var wire 1 * result_debug [6] $end
$var wire 1 + result_debug [5] $end
$var wire 1 , result_debug [4] $end
$var wire 1 - result_debug [3] $end
$var wire 1 . result_debug [2] $end
$var wire 1 / result_debug [1] $end
$var wire 1 0 result_debug [0] $end
$var wire 1 1 instruction [7] $end
$var wire 1 2 instruction [6] $end
$var wire 1 3 instruction [5] $end
$var wire 1 4 instruction [4] $end
$var wire 1 5 instruction [3] $end
$var wire 1 6 instruction [2] $end
$var wire 1 7 instruction [1] $end
$var wire 1 8 instruction [0] $end
$var wire 1 9 reg_write $end
$var wire 1 : mem_write $end
$var wire 1 ; alu_src $end
$var wire 1 < pc_write $end
$var wire 1 = mem_to_reg $end
$var wire 1 > imm_signed $end
$var wire 1 ? alu_op [2] $end
$var wire 1 @ alu_op [1] $end
$var wire 1 A alu_op [0] $end

$scope module u_datapath $end
$var wire 1 ' clk $end
$var wire 1 ( reset $end
$var wire 1 9 reg_write $end
$var wire 1 : mem_write $end
$var wire 1 ; alu_src $end
$var wire 1 < pc_write $end
$var wire 1 > imm_signed $end
$var wire 1 ? alu_op [2] $end
$var wire 1 @ alu_op [1] $end
$var wire 1 A alu_op [0] $end
$var wire 1 = mem_to_reg $end
$var wire 1 1 instruction_out [7] $end
$var wire 1 2 instruction_out [6] $end
$var wire 1 3 instruction_out [5] $end
$var wire 1 4 instruction_out [4] $end
$var wire 1 5 instruction_out [3] $end
$var wire 1 6 instruction_out [2] $end
$var wire 1 7 instruction_out [1] $end
$var wire 1 8 instruction_out [0] $end
$var wire 1 ) result_out [7] $end
$var wire 1 * result_out [6] $end
$var wire 1 + result_out [5] $end
$var wire 1 , result_out [4] $end
$var wire 1 - result_out [3] $end
$var wire 1 . result_out [2] $end
$var wire 1 / result_out [1] $end
$var wire 1 0 result_out [0] $end
$var wire 1 B pc [7] $end
$var wire 1 C pc [6] $end
$var wire 1 D pc [5] $end
$var wire 1 E pc [4] $end
$var wire 1 F pc [3] $end
$var wire 1 G pc [2] $end
$var wire 1 H pc [1] $end
$var wire 1 I pc [0] $end
$var wire 1 J instruction [7] $end
$var wire 1 K instruction [6] $end
$var wire 1 L instruction [5] $end
$var wire 1 M instruction [4] $end
$var wire 1 N instruction [3] $end
$var wire 1 O instruction [2] $end
$var wire 1 P instruction [1] $end
$var wire 1 Q instruction [0] $end
$var wire 1 R reg_data1 [7] $end
$var wire 1 S reg_data1 [6] $end
$var wire 1 T reg_data1 [5] $end
$var wire 1 U reg_data1 [4] $end
$var wire 1 V reg_data1 [3] $end
$var wire 1 W reg_data1 [2] $end
$var wire 1 X reg_data1 [1] $end
$var wire 1 Y reg_data1 [0] $end
$var wire 1 Z reg_data2 [7] $end
$var wire 1 [ reg_data2 [6] $end
$var wire 1 \ reg_data2 [5] $end
$var wire 1 ] reg_data2 [4] $end
$var wire 1 ^ reg_data2 [3] $end
$var wire 1 _ reg_data2 [2] $end
$var wire 1 ` reg_data2 [1] $end
$var wire 1 a reg_data2 [0] $end
$var wire 1 b alu_result [7] $end
$var wire 1 c alu_result [6] $end
$var wire 1 d alu_result [5] $end
$var wire 1 e alu_result [4] $end
$var wire 1 f alu_result [3] $end
$var wire 1 g alu_result [2] $end
$var wire 1 h alu_result [1] $end
$var wire 1 i alu_result [0] $end
$var wire 1 j mem_data [7] $end
$var wire 1 k mem_data [6] $end
$var wire 1 l mem_data [5] $end
$var wire 1 m mem_data [4] $end
$var wire 1 n mem_data [3] $end
$var wire 1 o mem_data [2] $end
$var wire 1 p mem_data [1] $end
$var wire 1 q mem_data [0] $end
$var wire 1 r write_data [7] $end
$var wire 1 s write_data [6] $end
$var wire 1 t write_data [5] $end
$var wire 1 u write_data [4] $end
$var wire 1 v write_data [3] $end
$var wire 1 w write_data [2] $end
$var wire 1 x write_data [1] $end
$var wire 1 y write_data [0] $end
$var wire 1 z alu_operand_b [7] $end
$var wire 1 { alu_operand_b [6] $end
$var wire 1 | alu_operand_b [5] $end
$var wire 1 } alu_operand_b [4] $end
$var wire 1 ~ alu_operand_b [3] $end
$var wire 1 !! alu_operand_b [2] $end
$var wire 1 "! alu_operand_b [1] $end
$var wire 1 #! alu_operand_b [0] $end
$var wire 1 $! opcode [3] $end
$var wire 1 %! opcode [2] $end
$var wire 1 &! opcode [1] $end
$var wire 1 '! opcode [0] $end
$var wire 1 (! reg_dst [1] $end
$var wire 1 )! reg_dst [0] $end
$var wire 1 *! reg_src1 [1] $end
$var wire 1 +! reg_src1 [0] $end
$var wire 1 ,! reg_src2 [1] $end
$var wire 1 -! reg_src2 [0] $end
$var wire 1 .! imm4 [3] $end
$var wire 1 /! imm4 [2] $end
$var wire 1 0! imm4 [1] $end
$var wire 1 1! imm4 [0] $end
$var wire 1 2! imm8_unsigned [7] $end
$var wire 1 3! imm8_unsigned [6] $end
$var wire 1 4! imm8_unsigned [5] $end
$var wire 1 5! imm8_unsigned [4] $end
$var wire 1 6! imm8_unsigned [3] $end
$var wire 1 7! imm8_unsigned [2] $end
$var wire 1 8! imm8_unsigned [1] $end
$var wire 1 9! imm8_unsigned [0] $end
$var wire 1 :! imm8_signed [7] $end
$var wire 1 ;! imm8_signed [6] $end
$var wire 1 <! imm8_signed [5] $end
$var wire 1 =! imm8_signed [4] $end
$var wire 1 >! imm8_signed [3] $end
$var wire 1 ?! imm8_signed [2] $end
$var wire 1 @! imm8_signed [1] $end
$var wire 1 A! imm8_signed [0] $end

$scope module u_register_file $end
$var wire 1 ' clk $end
$var wire 1 ( reset $end
$var wire 1 9 write_enable $end
$var wire 1 (! write_addr [1] $end
$var wire 1 )! write_addr [0] $end
$var wire 1 r write_data [7] $end
$var wire 1 s write_data [6] $end
$var wire 1 t write_data [5] $end
$var wire 1 u write_data [4] $end
$var wire 1 v write_data [3] $end
$var wire 1 w write_data [2] $end
$var wire 1 x write_data [1] $end
$var wire 1 y write_data [0] $end
$var wire 1 *! read_addr1 [1] $end
$var wire 1 +! read_addr1 [0] $end
$var wire 1 ,! read_addr2 [1] $end
$var wire 1 -! read_addr2 [0] $end
$var reg 8 B! read_data1 [7:0] $end
$var reg 8 C! read_data2 [7:0] $end
$var reg 8 D! pc_out [7:0] $end
$var wire 1 < pc_write_enable $end
$var reg 8 E! pc [7:0] $end
$var integer 32 F! i $end
$upscope $end

$scope module u_instr_mem $end
$var wire 1 ' clk $end
$var wire 1 G! write_enable $end
$var wire 1 B address [7] $end
$var wire 1 C address [6] $end
$var wire 1 D address [5] $end
$var wire 1 E address [4] $end
$var wire 1 F address [3] $end
$var wire 1 G address [2] $end
$var wire 1 H address [1] $end
$var wire 1 I address [0] $end
$var wire 1 H! write_data [7] $end
$var wire 1 I! write_data [6] $end
$var wire 1 J! write_data [5] $end
$var wire 1 K! write_data [4] $end
$var wire 1 L! write_data [3] $end
$var wire 1 M! write_data [2] $end
$var wire 1 N! write_data [1] $end
$var wire 1 O! write_data [0] $end
$var reg 8 P! read_data [7:0] $end
$var integer 32 Q! i $end
$upscope $end

$scope module u_alu $end
$var wire 1 R a [7] $end
$var wire 1 S a [6] $end
$var wire 1 T a [5] $end
$var wire 1 U a [4] $end
$var wire 1 V a [3] $end
$var wire 1 W a [2] $end
$var wire 1 X a [1] $end
$var wire 1 Y a [0] $end
$var wire 1 z b [7] $end
$var wire 1 { b [6] $end
$var wire 1 | b [5] $end
$var wire 1 } b [4] $end
$var wire 1 ~ b [3] $end
$var wire 1 !! b [2] $end
$var wire 1 "! b [1] $end
$var wire 1 #! b [0] $end
$var wire 1 ? alu_op [2] $end
$var wire 1 @ alu_op [1] $end
$var wire 1 A alu_op [0] $end
$var reg 8 R! result [7:0] $end
$var wire 1 S! zero $end
$upscope $end

$scope module u_data_mem $end
$var wire 1 ' clk $end
$var wire 1 : write_enable $end
$var wire 1 b address [7] $end
$var wire 1 c address [6] $end
$var wire 1 d address [5] $end
$var wire 1 e address [4] $end
$var wire 1 f address [3] $end
$var wire 1 g address [2] $end
$var wire 1 h address [1] $end
$var wire 1 i address [0] $end
$var wire 1 Z write_data [7] $end
$var wire 1 [ write_data [6] $end
$var wire 1 \ write_data [5] $end
$var wire 1 ] write_data [4] $end
$var wire 1 ^ write_data [3] $end
$var wire 1 _ write_data [2] $end
$var wire 1 ` write_data [1] $end
$var wire 1 a write_data [0] $end
$var reg 8 T! read_data [7:0] $end
$var integer 32 U! i $end
$upscope $end
$upscope $end

$scope module u_control $end
$var wire 1 1 instruction [7] $end
$var wire 1 2 instruction [6] $end
$var wire 1 3 instruction [5] $end
$var wire 1 4 instruction [4] $end
$var wire 1 5 instruction [3] $end
$var wire 1 6 instruction [2] $end
$var wire 1 7 instruction [1] $end
$var wire 1 8 instruction [0] $end
$var reg 1 V! reg_write $end
$var reg 1 W! mem_write $end
$var reg 1 X! alu_src $end
$var reg 1 Y! pc_write $end
$var reg 3 Z! alu_op [2:0] $end
$var reg 1 [! mem_to_reg $end
$var reg 1 \! imm_signed $end
$var wire 1 ]! opcode [3] $end
$var wire 1 ^! opcode [2] $end
$var wire 1 _! opcode [1] $end
$var wire 1 `! opcode [0] $end
$var wire 1 a! operand [3] $end
$var wire 1 b! operand [2] $end
$var wire 1 c! operand [1] $end
$var wire 1 d! operand [0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
1"
bx B!
bx C!
b0 D!
b0 E!
bx P!
bx R!
bx T!
xV!
xW!
xX!
xY!
bx Z!
x[!
x\!
b100 F!
b100000000 Q!
b100000000 U!
x&
x%
x$
x#
x0
x/
x.
x-
x,
x+
x*
x)
x8
x7
x6
x5
x4
x3
x2
x1
x9
x:
x;
x<
x=
x>
xA
x@
x?
0I
0H
0G
0F
0E
0D
0C
0B
xQ
xP
xO
xN
xM
xL
xK
xJ
xY
xX
xW
xV
xU
xT
xS
xR
xa
x`
x_
x^
x]
x\
x[
xZ
xi
xh
xg
xf
xe
xd
xc
xb
xq
xp
xo
xn
xm
xl
xk
xj
xy
xx
xw
xv
xu
xt
xs
xr
x#!
x"!
x!!
x~
x}
x|
x{
xz
x'!
x&!
x%!
x$!
x)!
x(!
x+!
x*!
x-!
x,!
x1!
x0!
x/!
x.!
x9!
x8!
x7!
x6!
05!
04!
03!
02!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x`!
x_!
x^!
x]!
xd!
xc!
xb!
xa!
1(
0'
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
xS!
$end
#10000
1!
1'
b0 F!
b1 F!
b10 F!
b11 F!
b100 F!
b1110001 P!
1Q
0P
0O
0N
1M
1L
1K
0J
1'!
1&!
1%!
0$!
0)!
0(!
11!
00!
0/!
0.!
18
07
06
05
14
13
12
01
1d!
0c!
0b!
0a!
19!
08!
07!
06!
1A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
1`!
1_!
1^!
0]!
0+!
0*!
1-!
0,!
b0 B!
b0 C!
0V!
0W!
0X!
1Y!
b0 Z!
0[!
0\!
1V!
1X!
0a
0`
0_
0^
0]
0\
0[
0Z
19
0:
1;
1<
0=
0>
1#!
0"!
0!!
0~
0}
0|
0{
0z
0A
0@
0?
0Y
0X
0W
0V
0U
0T
0S
0R
b1 R!
0S!
1i
0h
0g
0f
0e
0d
0c
0b
1y
0x
0w
0v
0u
0t
0s
0r
10
0/
0.
0-
0,
0+
0*
0)
1&
0%
0$
0#
#20000
0!
0'
#30000
1!
1'
b0 F!
b1 F!
b10 F!
b11 F!
b100 F!
b1110101 T!
1q
0p
1o
0n
1m
1l
1k
0j
#40000
0!
0'
#50000
1!
1'
b0 F!
b1 F!
b10 F!
b11 F!
b100 F!
#60000
0!
0'
#70000
1!
1'
b0 F!
b1 F!
b10 F!
b11 F!
b100 F!
#80000
0!
0'
#90000
1!
1'
b0 F!
b1 F!
b10 F!
b11 F!
b100 F!
#100000
0"
0!
0(
0'
#110000
1!
1'
b1 E!
b1 B!
b1 D!
1I
1Y
b10 R!
0i
1h
0y
1x
00
1/
0&
1%
#120000
0!
0'
#130000
1!
1'
b10 E!
b1110101 P!
b1111010 T!
0q
1p
0o
1n
1O
1)!
1/!
16
1b!
17!
1?!
1!!
1+!
b110 R!
b0 B!
b10 D!
0I
1H
1g
1w
1.
1$
0Y
b101 R!
1i
0h
1y
0x
10
0/
1&
0%
#140000
0!
0'
#150000
1!
1'
b11 E!
b1111010 P!
b0 T!
0p
0n
0m
0l
0k
0Q
1P
0O
1N
0)!
1(!
01!
10!
0/!
1.!
08
17
06
15
0d!
1c!
0b!
1a!
09!
18!
07!
16!
0A!
1@!
0?!
1>!
1=!
1<!
1;!
1:!
0#!
1"!
0!!
1~
0+!
1*!
0-!
1,!
b1010 R!
b11 D!
1I
0i
1h
0g
1f
0y
1x
0w
1v
00
1/
0.
1-
0&
1%
0$
1#
#160000
0!
0'
#170000
1!
1'
b100 E!
b11010 P!
0L
0K
0&!
0%!
03
02
0_!
0^!
0V!
0X!
1V!
b1010 B!
b1010 C!
b100 D!
0;
0I
0H
1G
1`
1^
1X
1V
b10100 R!
0h
1g
0f
1e
0x
1w
0v
1u
0/
1.
0-
1,
0%
1$
0#
#180000
0!
0'
#190000
1!
1'
b101 E!
b11111111 P!
1Q
1O
1L
1K
1J
1&!
1%!
1$!
1)!
11!
1/!
18
16
13
12
11
1d!
1b!
19!
17!
1A!
1?!
1_!
1^!
1]!
1+!
1-!
0V!
b0 B!
b0 C!
b101 D!
09
1I
0`
0^
0"!
0~
0X
0V
b0 R!
1S!
0g
0e
0w
0u
0.
0,
0$
#200000
0!
0'
#210000
1!
1'
b110 E!
b0 P!
b1110001 T!
1q
1m
1l
1k
0Q
0P
0O
0N
0M
0L
0K
0J
0'!
0&!
0%!
0$!
0)!
0(!
01!
00!
0/!
0.!
08
07
06
05
04
03
02
01
0d!
0c!
0b!
0a!
09!
08!
07!
06!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
0`!
0_!
0^!
0]!
0+!
0*!
0-!
0,!
b10 B!
b10 C!
b110 D!
0I
1H
1`
1"!
1X
b100 R!
0S!
1g
1w
1.
1$
#220000
0!
0'
#230000
1!
1'
b111 E!
b11111111 T!
1p
1o
1n
1j
b111 D!
1I
#240000
0!
0'
#250000
1!
1'
b1000 E!
b1000 D!
0I
0H
0G
1F
#260000
0!
0'
#270000
1!
1'
b1001 E!
b1001 D!
1I
#280000
0!
0'
#290000
1!
1'
b1010 E!
b1010 D!
0I
1H
#300000
0!
0'
#310000
1!
1'
b1011 E!
b1011 D!
1I
#320000
0!
0'
#330000
1!
1'
b1100 E!
b1100 D!
0I
0H
1G
#340000
0!
0'
#350000
1!
1'
b1101 E!
b1101 D!
1I
#360000
0!
0'
#370000
1!
1'
b1110 E!
b1110 D!
0I
1H
#380000
0!
0'
#390000
1!
1'
b1111 E!
b1111 D!
1I
#400000
0!
0'
#410000
1!
1'
b10000 E!
b10000 D!
0I
0H
0G
0F
1E
#420000
0!
0'
#430000
1!
1'
b10001 E!
b10001 D!
1I
#440000
0!
0'
#450000
1!
1'
b10010 E!
b10010 D!
0I
1H
#460000
0!
0'
#470000
1!
1'
b10011 E!
b10011 D!
1I
#480000
0!
0'
#490000
1!
1'
b10100 E!
b10100 D!
0I
0H
1G
#500000
0!
0'
#510000
1!
1'
b10101 E!
b10101 D!
1I
#520000
0!
0'
#530000
1!
1'
b10110 E!
b10110 D!
0I
1H
#540000
0!
0'
#550000
1!
1'
b10111 E!
b10111 D!
1I
#560000
0!
0'
#570000
1!
1'
b11000 E!
b11000 D!
0I
0H
0G
1F
#580000
0!
0'
#590000
1!
1'
b11001 E!
b11001 D!
1I
#600000
0!
0'
#610000
1!
1'
b11010 E!
b11010 D!
0I
1H
#620000
0!
0'
#630000
1!
1'
b11011 E!
b11011 D!
1I
#640000
0!
0'
#650000
1!
1'
b11100 E!
b11100 D!
0I
0H
1G
#660000
0!
0'
#670000
1!
1'
b11101 E!
b11101 D!
1I
#680000
0!
0'
#690000
1!
1'
b11110 E!
b11110 D!
0I
1H
#700000
0!
0'
#710000
1!
1'
b11111 E!
b11111 D!
1I
#720000
0!
0'
#730000
1!
1'
b100000 E!
b100000 D!
0I
0H
0G
0F
0E
1D
#740000
0!
0'
#750000
1!
1'
b100001 E!
b100001 D!
1I
#760000
0!
0'
#770000
1!
1'
b100010 E!
b100010 D!
0I
1H
#780000
0!
0'
#790000
1!
1'
b100011 E!
b100011 D!
1I
#800000
0!
0'
#810000
1!
1'
b100100 E!
b100100 D!
0I
0H
1G
#820000
0!
0'
#830000
1!
1'
b100101 E!
b100101 D!
1I
#840000
0!
0'
#850000
1!
1'
b100110 E!
b100110 D!
0I
1H
#860000
0!
0'
#870000
1!
1'
b100111 E!
b100111 D!
1I
#880000
0!
0'
#890000
1!
1'
b101000 E!
b101000 D!
0I
0H
0G
1F
#900000
0!
0'
#910000
1!
1'
b101001 E!
b101001 D!
1I
#920000
0!
0'
#930000
1!
1'
b101010 E!
b101010 D!
0I
1H
#940000
0!
0'
#950000
1!
1'
b101011 E!
b101011 D!
1I
#960000
0!
0'
#970000
1!
1'
b101100 E!
b101100 D!
0I
0H
1G
#980000
0!
0'
#990000
1!
1'
b101101 E!
b101101 D!
1I
#1000000
0!
0'
#1010000
1!
1'
b101110 E!
b101110 D!
0I
1H
#1020000
0!
0'
#1030000
1!
1'
b101111 E!
b101111 D!
1I
#1040000
0!
0'
#1050000
1!
1'
b110000 E!
b110000 D!
0I
0H
0G
0F
1E
#1060000
0!
0'
#1070000
1!
1'
b110001 E!
b110001 D!
1I
#1080000
0!
0'
#1090000
1!
1'
b110010 E!
b110010 D!
0I
1H
